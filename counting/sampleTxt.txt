In kdb+/q, strings are represented as lists of characters (data type 10h).  Crucially, each character in a q string occupies exactly one byte. This means the number of characters in a string is equivalent to its byte length.  While q doesn't natively support multibyte characters in the same way as some other languages, they can be handled by converting them to their UTF-8 byte representation using the -8! serialization operator.  This conversion results in a byte list (type 4h), whose length reflects the actual byte count of the UTF-8 encoded string.  This byte list can then be converted back to a q string using the $ operator.  Therefore, while count gives the character (and byte) count for simple ASCII strings, working with the UTF-8 byte representation is essential for accurate byte length calculations when dealing with multibyte characters.